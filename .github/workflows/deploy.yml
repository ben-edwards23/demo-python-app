name: Build and Deploy Python Demo Application
on:
  push:
    branches:
      - main
env:
  IMAGE_NAME: demo-python-app
  TAG: latest
jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Log into Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: ./infra
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  build_deploy_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Log into Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR login server
        id: acr
        run: |
          echo "login_server=$(az acr show --name ${{ secrets.ACR_NAME }} --query loginServer --output tsv)" >> $GITHUB_OUTPUT

      - name: Login to ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}
      
      - name: Build and Push Container Image to ACR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.acr.outputs.login_server }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          
      - name: Configure app settings (WEBSITES_PORT)
        run: |
          az webapp config appsettings set \
            -g "${{ secrets.AZ_RESOURCE_GROUP }}" \
            -n "${{ secrets.AZ_WEBAPP_NAME }}" \
            --settings WEBSITES_PORT=8000

      - name: Point Web App at the container image
        run: |
          az webapp config container set \
            -g "${{ secrets.AZ_RESOURCE_GROUP }}" \
            -n "${{ secrets.AZ_WEBAPP_NAME }}" \
            --docker-custom-image-name "${{ steps.acr.outputs.login_server }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" \
            --docker-registry-server-url "https://${{ steps.acr.outputs.login_server }}"          

      - name: Restart Web App
        run: az webapp restart -g "${{ secrets.AZ_RESOURCE_GROUP }}" -n "${{ secrets.AZ_WEBAPP_NAME }}"

      - name: Output site URL
        run: |
          URL=$(az webapp show -g "${{ secrets.AZ_RESOURCE_GROUP }}" -n "${{ secrets.AZ_WEBAPP_NAME }}" --query defaultHostName -o tsv)
          echo "Site: https://$URL"